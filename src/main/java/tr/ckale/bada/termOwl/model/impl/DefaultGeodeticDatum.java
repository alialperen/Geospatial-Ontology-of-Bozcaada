package tr.ckale.bada.termOwl.model.impl;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;

import tr.ckale.bada.termOwl.model.*;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultGeodeticDatum <br>
 * @version generated on Wed Dec 21 09:21:50 MSK 2016 by Alperen
 */
public class DefaultGeodeticDatum extends WrappedIndividualImpl implements GeodeticDatum {

    public DefaultGeodeticDatum(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Data Property http://www.semanticweb.org/alperen/ontologies/2016/11/geolocation#latlong
     */
     
    public Collection<? extends Object> getLatlong() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_LATLONG, Object.class);
    }

    public boolean hasLatlong() {
		return !getLatlong().isEmpty();
    }

    public void addLatlong(Object newLatlong) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_LATLONG, newLatlong);
    }

    public void removeLatlong(Object oldLatlong) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_LATLONG, oldLatlong);
    }


}
